/*
Copyright 2020 The KubeSphere Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v2alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v2alpha1 "kubesphere.io/kubesphere/pkg/apis/notification/v2alpha1"
)

// SlackConfigLister helps list SlackConfigs.
type SlackConfigLister interface {
	// List lists all SlackConfigs in the indexer.
	List(selector labels.Selector) (ret []*v2alpha1.SlackConfig, err error)
	// Get retrieves the SlackConfig from the index for a given name.
	Get(name string) (*v2alpha1.SlackConfig, error)
	SlackConfigListerExpansion
}

// slackConfigLister implements the SlackConfigLister interface.
type slackConfigLister struct {
	indexer cache.Indexer
}

// NewSlackConfigLister returns a new SlackConfigLister.
func NewSlackConfigLister(indexer cache.Indexer) SlackConfigLister {
	return &slackConfigLister{indexer: indexer}
}

// List lists all SlackConfigs in the indexer.
func (s *slackConfigLister) List(selector labels.Selector) (ret []*v2alpha1.SlackConfig, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v2alpha1.SlackConfig))
	})
	return ret, err
}

// Get retrieves the SlackConfig from the index for a given name.
func (s *slackConfigLister) Get(name string) (*v2alpha1.SlackConfig, error) {
	obj, exists, err := s.indexer.GetByKey(name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v2alpha1.Resource("slackconfig"), name)
	}
	return obj.(*v2alpha1.SlackConfig), nil
}
