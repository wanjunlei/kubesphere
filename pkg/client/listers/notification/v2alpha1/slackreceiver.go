/*
Copyright 2020 The KubeSphere Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v2alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v2alpha1 "kubesphere.io/kubesphere/pkg/apis/notification/v2alpha1"
)

// SlackReceiverLister helps list SlackReceivers.
type SlackReceiverLister interface {
	// List lists all SlackReceivers in the indexer.
	List(selector labels.Selector) (ret []*v2alpha1.SlackReceiver, err error)
	// Get retrieves the SlackReceiver from the index for a given name.
	Get(name string) (*v2alpha1.SlackReceiver, error)
	SlackReceiverListerExpansion
}

// slackReceiverLister implements the SlackReceiverLister interface.
type slackReceiverLister struct {
	indexer cache.Indexer
}

// NewSlackReceiverLister returns a new SlackReceiverLister.
func NewSlackReceiverLister(indexer cache.Indexer) SlackReceiverLister {
	return &slackReceiverLister{indexer: indexer}
}

// List lists all SlackReceivers in the indexer.
func (s *slackReceiverLister) List(selector labels.Selector) (ret []*v2alpha1.SlackReceiver, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v2alpha1.SlackReceiver))
	})
	return ret, err
}

// Get retrieves the SlackReceiver from the index for a given name.
func (s *slackReceiverLister) Get(name string) (*v2alpha1.SlackReceiver, error) {
	obj, exists, err := s.indexer.GetByKey(name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v2alpha1.Resource("slackreceiver"), name)
	}
	return obj.(*v2alpha1.SlackReceiver), nil
}
